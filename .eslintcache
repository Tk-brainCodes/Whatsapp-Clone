[{"/home/caleb/Public/whatsapp-clone/src/reportWebVitals.js":"1","/home/caleb/Public/whatsapp-clone/src/App.js":"2","/home/caleb/Public/whatsapp-clone/src/index.js":"3","/home/caleb/Public/whatsapp-clone/src/Components/Chat/Chat.js":"4","/home/caleb/Public/whatsapp-clone/src/firebase.js":"5","/home/caleb/Public/whatsapp-clone/src/Components/SidebarChat/SidebarChat.js":"6","/home/caleb/Public/whatsapp-clone/src/Components/Sidenav/Sidenav.js":"7","/home/caleb/Public/whatsapp-clone/src/Components/Login/Login.js":"8","/home/caleb/Public/whatsapp-clone/src/reducer.js":"9","/home/caleb/Public/whatsapp-clone/src/stateProvider.js":"10"},{"size":362,"mtime":1607071190001,"results":"11","hashOfConfig":"12"},{"size":804,"mtime":1608676161081,"results":"13","hashOfConfig":"12"},{"size":683,"mtime":1608675495794,"results":"14","hashOfConfig":"12"},{"size":3735,"mtime":1608680686749,"results":"15","hashOfConfig":"12"},{"size":766,"mtime":1608664979824,"results":"16","hashOfConfig":"12"},{"size":1377,"mtime":1608681651733,"results":"17","hashOfConfig":"12"},{"size":2368,"mtime":1608676523749,"results":"18","hashOfConfig":"12"},{"size":1091,"mtime":1608685119720,"results":"19","hashOfConfig":"12"},{"size":403,"mtime":1608675293434,"results":"20","hashOfConfig":"12"},{"size":401,"mtime":1608675646725,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z31qz7",{"filePath":"25","messages":"26","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/caleb/Public/whatsapp-clone/src/reportWebVitals.js",[],["46","47"],"/home/caleb/Public/whatsapp-clone/src/App.js",["48"],"/home/caleb/Public/whatsapp-clone/src/index.js",[],["49","50"],"/home/caleb/Public/whatsapp-clone/src/Components/Chat/Chat.js",["51"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './Chat.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { MoreVert, SearchOutlined, AttachFile, InsertEmoticon, Mic } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport db from '../../firebase';\nimport { useStateValue } from '../../stateProvider';\nimport firebase from 'firebase';\n\n\n\nconst Chat = () => {\n    const [input, setInput] = useState('');\n    const [seed, setSeed] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => (\n                setRoomName(snapshot.data().name)\n            ));\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp', 'asc').onSnapshot(snapshot => (\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            ))\n        }\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log(\"you typed,\", input);\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n        setInput(\"\");\n\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen{\"\"}{new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <IconButton>\n                        <AttachFile />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVert />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <React.Fragment>\n                        <p className={`chat__message   ${message.name === user.displayName && \"chat__receiver\"}`}>\n                            <span className=\"chat__name\">{message.name}</span>\n                            {message.message}\n                            <span className=\"time__stamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\n                        </p>\n                    </React.Fragment>\n                ))}\n            </div>\n            <div className=\"chat__footer\">\n                <IconButton>\n                    <InsertEmoticon />\n                </IconButton>\n                <form>\n                    <input\n                        value={input}\n                        onChange={(e) => setInput(e.target.value)}\n                        type=\"text\"\n                        className=\"input__field\"\n                        placeholder=\"Enter a message\"\n                    />\n                    <button type=\"submit\" onClick={sendMessage} className=\"input__btn\" >Send a message</button>\n                </form>\n                <IconButton>\n                    <Mic />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;\n","/home/caleb/Public/whatsapp-clone/src/firebase.js",[],"/home/caleb/Public/whatsapp-clone/src/Components/SidebarChat/SidebarChat.js",[],"/home/caleb/Public/whatsapp-clone/src/Components/Sidenav/Sidenav.js",["52"],"import React, { useEffect, useState } from 'react';\nimport './Sidenav.css'\nimport SidebarChat from '../SidebarChat/SidebarChat';\nimport Avatar from '@material-ui/core/Avatar';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport { SearchOutlined } from '@material-ui/icons';\nimport db from '../../firebase';\nimport {useStateValue} from '../../stateProvider';\n\n\nconst Sidenav = () => {\n    const [rooms, setRooms] = useState([]);\n    const [{user}, dispatch] = useStateValue();\n\n    useEffect(() => {\n        const unSubscribe = db.collection('rooms').onSnapshot((snapshot) => {\n            setRooms(snapshot.docs.map((doc) => (\n                {\n                    id: doc.id,\n                    data: doc.data(),\n\n                }\n            )))\n            return () => {\n                unSubscribe();\n            }\n        })\n    }, []);\n    return (\n        <div className=\"sidenav\">\n\n            <div className=\"sidebar__header\">\n                <Avatar src={user?.photoURL} />\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className=\"sidebar__search\">\n                <div className=\"search__container\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n                    <input\n                        placeholder=\"Search or start new Chat\"\n                        type=\"text\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"sidebar__chat\">\n                <SidebarChat addNewChat />\n                {rooms.map(room => (\n                    <SidebarChat\n                        key={room.id}\n                        id={room.id}\n                        name={room.data.name}\n                    />\n                ))}\n            </div>\n\n        </div>\n    )\n}\nexport default Sidenav;","/home/caleb/Public/whatsapp-clone/src/Components/Login/Login.js",["53"],"/home/caleb/Public/whatsapp-clone/src/reducer.js",[],"/home/caleb/Public/whatsapp-clone/src/stateProvider.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":null,"fatal":true,"severity":2,"message":"58","line":11,"column":1},{"ruleId":"54","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":19,"column":22,"nodeType":"63","messageId":"64","endLine":19,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":16,"column":20,"nodeType":"63","messageId":"64","endLine":16,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":10,"column":12,"nodeType":"67","messageId":"68","endLine":10,"endColumn":14},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"Parsing error: Unexpected token\n\n   9 | \n  10 | \n> 11 | function App() {\n     | ^\n  12 |   const [{user}, dispatch] = useStateValue();\n  13 |   return (\n  14 |     <div className=\"App\">",["69"],["70"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]